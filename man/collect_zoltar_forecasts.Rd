% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collect_zoltar_forecasts.R
\name{collect_zoltar_forecasts}
\alias{collect_zoltar_forecasts}
\title{Load forecasts from zoltardata.com in hubverse format}
\usage{
collect_zoltar_forecasts(
  project_name,
  models = NULL,
  timezeros = NULL,
  units = NULL,
  targets = NULL,
  types = NULL,
  as_of = NULL,
  point_output_type = "median"
)
}
\arguments{
\item{project_name}{a string naming the Zoltar project to load forecasts from. assumes the host is zoltardata.com}

\item{models}{a character vector that specifies the models to query. must be model abbreviations. defaults to NULL,
which queries all models in the project}

\item{timezeros}{a character vector that specifies the timezeros to query. must be yyyy-mm-dd format. defaults to
NULL, which queries all timezeros in the project}

\item{units}{a character vector that specifies the units to query. must be unit abbreviations. defaults to NULL,
which queries all units in the project}

\item{targets}{a character vector that specifies the targets to query. must be target names. defaults to NULL,
which queries all targets in the project}

\item{types}{a character vector that specifies the forecast types to query. Choices are "bin", "point", "sample",
"quantile", "mean", and "median". defaults to NULL, which queries all types in the project. note: while Zoltar
supports "named" and "mode" forecasts, this function ignores them}

\item{as_of}{a datetime string that specifies the forecast version. The as_of field format must be a datetime as
parsed by the \href{https://dateutil.readthedocs.io/}{dateutil python library}, which accepts a variety of styles.
You can find examples \href{https://dateutil.readthedocs.io/en/stable/examples.html#parse-examples}{here}.
importantly, the datetime must include timezone information for disambiguation, without which the query will fail.
also, the datatime parsing function used below is extremely lenient when it comes to formatting, so please exercise
caution. defaults to NULL to load the latest version}

\item{point_output_type}{a string that specifies how to convert zoltar \code{point} forecast data to hubverse output type.
must be either "median" or "mean". defaults to "median"}
}
\value{
a hubverse model_out_tbl containing the following columns: "model_id", "timezero", "season", "unit",
"horizon", "target", "output_type", "output_type_id", and "value"
}
\description{
\code{collect_zoltar_forecasts} retrieves data from a \href{https://zoltardata.com/}{zoltardata.com} project and
transforms it from Zoltar's native download format into a hubverse one. Zoltar (documentation
\href{https://docs.zoltardata.com/}{here}) is a pre-hubverse research project that implements a repository of model
forecast results, including tools to administer, query, and visualize uploaded data, along with R and Python APIs to
access data programmatically (\href{https://github.com/reichlab/zoltr/}{zoltr} and
\href{https://github.com/reichlab/zoltpy/}{zoltpy}, respectively.) (This hubData function is itself implemented using
the zoltr package.)
}
\details{
Zoltar's data model differs from that of the hubverse in a few important ways. While Zoltar's model has the
concepts of unit, target, and timezero, hubverse projects have hub-configurable columns, which makes the mapping
from the former to the latter imperfect. In particular, Zoltar units translate roughly to hubverse task IDs, Zoltar
targets include both the target outcome and numeric horizon in the target name, and Zoltar timezeros map to round
ids. Finally, Zoltar's forecast types differ from those of the hubverse. Whereas Zoltar has seven types (bin,
named, point, sample, quantile, mean, median, and mode), the hubverse has six (cdf, mean, median, pmf, quantile,
sample), only some of which overlap.

Additional notes:
\itemize{
\item requires the user to have a Zoltar account (use the \href{https://zoltardata.com/about}{Zoltar contact page}
to request one)
\item requires \code{Z_USERNAME} and \code{Z_PASSWORD} environment vars to be set to those of the user's Zoltar account
\item while Zoltar supports "named" and "mode" forecasts, this function ignores them
\item rows with non-numeric values are ignored
\item this function removes numeric_horizon mentions from zoltar target names. target names can contain a maximum of
one numeric_horizon. example: "1 wk ahead inc case" -> "wk ahead inc case"
}
}
\examples{
\dontrun{
df <- collect_zoltar_forecasts("Docs Example Project")
df <-
  collect_zoltar_forecasts("Docs Example Project", models = c("docs_mod"),
                        timezeros = c("2011-10-16"), units = c("loc1", "loc3"),
                        targets = c("pct next week", "cases next week"), types = c("point"),
                        as_of = NULL, point_output_type = "mean")
}

}
